{"version":3,"sources":["components/Leaderboard.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Leaderboard","_ref","data","React","createElement","className","map","item","key","username","rank","points","SearchBar","query","onQueryChange","type","placeholder","value","onChange","e","target","App","setData","useState","setQuery","useEffect","async","parsedData","axios","get","values","slice","parseInt","fetchData","filteredData","filter","toLowerCase","includes","sort","a","b","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iOAiCeA,MA9BKC,IAAe,IAAd,KAAEC,GAAMD,EAC3B,OACEE,IAAAC,cAAA,OAAKC,UAAU,yBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UAAI,YAGRD,IAAAC,cAAA,aACGF,EAAKI,IAAKC,GACTJ,IAAAC,cAAA,MAAII,IAAKD,EAAKE,UACZN,IAAAC,cAAA,UAAKG,EAAKG,MACVP,IAAAC,cAAA,UAAKG,EAAKE,UACVN,IAAAC,cAAA,UAAKG,EAAKI,aAMpBR,IAAAC,cAAA,OAAKC,UAAU,sBCXNO,MAbGX,IAA+B,IAA9B,MAAEY,EAAK,cAAEC,GAAeb,EACzC,OACEE,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SACEW,KAAK,OACLC,YAAY,2BACZC,MAAOJ,EACPK,SAAWC,GAAML,EAAcK,EAAEC,OAAOH,WCsCjCI,MArCf,WACE,MAAOnB,EAAMoB,GAAWC,mBAAS,KAC1BV,EAAOW,GAAYD,mBAAS,IAEnCE,oBAAU,KACUC,WAChB,MAGMC,SAFiBC,IAAMC,IADjB,6JAEU3B,KAAK4B,OAAOC,MAAM,GAChBzB,IAAIL,IAAA,IAAEQ,EAAUE,GAAOV,EAAA,MAAM,CACnDQ,WACAE,OAAQqB,SAASrB,MAEnBW,EAAQK,IAEVM,IACC,IAEH,MAAMC,EAAehC,EAClBiC,OAAQ5B,GACPA,EAAKE,SAAS2B,cAAcC,SAASxB,EAAMuB,gBAE5CE,KAAK,CAACC,EAAGC,IAAMA,EAAE7B,OAAS4B,EAAE5B,QAC5BL,IAAI,CAACC,EAAMkC,KAAK,IACZlC,EACHG,KAAM+B,EAAQ,KAGlB,OACEtC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAACQ,EAAS,CAACC,MAAOA,EAAOC,cAAeU,IACxCrB,IAAAC,cAACJ,EAAW,CAACE,KAAMgC,MC9BVQ,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK5C,IAAkD,IAAjD,OAAE6C,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASjD,EACpE6C,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpD,IAAAC,cAACD,IAAMqD,WAAU,KACfrD,IAAAC,cAACiB,EAAG,QAORqB,K","file":"static/js/main.fda4b0c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\"// Use your existing CSS file\r\n\r\nconst Leaderboard = ({ data }) => {\r\n  return (\r\n    <div className=\"leaderboard-container\">\r\n      <div className=\"leaderboard\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Rank</th>\r\n              <th>Username</th>\r\n              <th>Points</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((item) => (\r\n              <tr key={item.username}>\r\n                <td>{item.rank}</td>\r\n                <td>{item.username}</td>\r\n                <td>{item.points}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"image-container\">\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n","import React from \"react\";\r\n\r\nconst SearchBar = ({ query, onQueryChange }) => {\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a username...\"\r\n        value={query}\r\n        onChange={(e) => onQueryChange(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Leaderboard from \"./components/Leaderboard\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport \"./App.css\";\r\n\r\nconst SHEET_ID = process.env.REACT_APP_SHEET_ID; // Replace with your sheet's ID\r\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY; // Replace with your API key\r\nconst sheetRange = \"Sheet1!A:B\"; // Usernames (Column A), Points (Column B)\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${sheetRange}?key=${API_KEY}`;\r\n      const response = await axios.get(url);\r\n      const rows = response.data.values.slice(1); // Excludes header row\r\n      const parsedData = rows.map(([username, points]) => ({\r\n        username,\r\n        points: parseInt(points),\r\n      }));\r\n      setData(parsedData);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const filteredData = data\r\n    .filter((item) =>\r\n      item.username.toLowerCase().includes(query.toLowerCase())\r\n    )\r\n    .sort((a, b) => b.points - a.points)  // Sort by points in descending order\r\n    .map((item, index) => ({\r\n      ...item,         // Spread the existing item properties\r\n      rank: index + 1  // Assign a rank based on the position in the sorted array\r\n    }));\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Puppies Leaderboard</h1>\r\n      <SearchBar query={query} onQueryChange={setQuery} />\r\n      <Leaderboard data={filteredData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}